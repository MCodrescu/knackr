% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/retrieve_records.R
\name{retrieve_records}
\alias{retrieve_records}
\title{Retrieve Records From Knack}
\usage{
retrieve_records(
  object,
  include_raw = FALSE,
  filter_field = "",
  match = "and",
  operator = "is",
  value = "",
  limit = 1000
)
}
\arguments{
\item{object}{A string containing the Knack object to pull data from. Ex: 'object_2'}

\item{include_raw}{A logical stating whether raw fields should be included. Links are only included in raw fields.}

\item{filter_field}{A character vector of fields to filter. Can be one or more fields.}

\item{match}{A string containing either 'and' or 'or'. This will determine whether the records retrieved match all filters or at least one.}

\item{operator}{The character vector containing the operator for the filters. Options include:
contains, does not contain, is, is not, starts with, ends with, is blank, is not blank,
is during the current, is during the previous, is during the next, is before the previous,
is after the next, is before, is after, is today, is today or before, is today or after,
is before today, is after today, is before current time, is after current time, is lower than, is higher than.
Note that dates must be in the format 'YYYY-MM-DD'}

\item{value}{A character vector containing the values the operator uses to filter by.}

\item{limit}{The number of records to include per page. The default is 1000.}
}
\value{
A data frame of filtered records.
}
\description{
Retrieve Records From Knack
}
\examples{
\dontrun{
# Retrieve all records from an object
retrieve_records("object_23")

# Retrieve records according to a single condition
retrieve_records("object_23",
                  filter_field = "field_169",
                  operator = "is lower than",
                  value = 2
                  )

# Retrieve records within a date range
# Note that dates must be in 'YYYY-MM-DD' format
retrieve_records("object_23",
                  filter_field = "field_170",
                  operator = c("is after","is before"),
                  value = c('2021-12-01','2021-12-30'))


# Retrieve records according to multiple field conditions
# Note that connected records must be searched by id
retrieve_records("object_23",
                  filter_field = c("field_210","field_227"),
                  operator = c("contains","is"),
                  value = c("Monday","60b1a7696cee6c001f5cc3d7")
                  )
}

}
